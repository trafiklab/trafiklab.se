{
  "openapi": "3.0.0",
  "info": {
    "title": "Reseplanerare V2",
    "description": "SL publika apier för reseplanering",
    "version": "2.0.0"
  },
  "host": "deviations.integration.sl.se",
  "basePath": "/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/system-info": {
      "get": {
        "summary": "Retrieve EFA system information",
        "parameters": [
          {
            "name": "X-Correlation-Id",
            "description": "For your own traceability. This is to be generated by the user and is used for correspondence with SL.",
            "in": "header",
            "schema": {
              "description": "For your own traceability. This is to be generated by the user and is used for correspondence with SL.",
              "type": "string"
            }
          },
          {
            "name": "User-Contact-Information",
            "description": "Please provide your e-mail information. You will be notified when there is major or minor version changes.",
            "in": "header",
            "schema": {
              "description": "Please provide your e-mail information. You will be notified when there is major or minor version changes.",
              "type": "string",
              "pattern": "^[a-zA-Z0-9.*%±]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EFA system information",
            "headers": {
              "cache-control": {
                "description": "This response header will contain a max-age that hint the max time, in seconds, the data is cached for this resource. In case of no cache policy apply then it will also contain the 'no-cache' directive.",
                "required": true,
                "schema": {
                  "description": "This response header will contain a max-age that hint the max time, in seconds, the data is cached for this resource. In case of no cache policy apply then it will also contain the 'no-cache' directive.",
                  "type": "string"
                }
              },
              "age": {
                "description": "This response header contains the time in seconds the response has been in the cache when a cache policy applied. When response is not cached this header is omitted.",
                "schema": {
                  "description": "This response header contains the time in seconds the response has been in the cache when a cache policy applied. When response is not cached this header is omitted.",
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openapisystemsInfoType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiBadRequestType"
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiResourceNotFoundType"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiInternalServerErrorType"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiBadGatewayType"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiGatewayTimeoutType"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://journeyplanner.integration.sl.se/v2/"
          }
        ]
      }
    },
    "/stop-finder": {
      "get": {
        "summary": "Retrieve information for stops, addresses and POI:s",
        "parameters": [
          {
            "name": "name_sf",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/name_sfParam"
            }
          },
          {
            "name": "type_sf",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/type_sfParam"
            }
          },
          {
            "name": "any_obj_filter_sf",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/any_obj_filter_sfParam"
            }
          },
          {
            "name": "X-Correlation-Id",
            "description": "For your own traceability. This is to be generated by the user and is used for correspondence with SL.",
            "in": "header",
            "schema": {
              "description": "For your own traceability. This is to be generated by the user and is used for correspondence with SL.",
              "type": "string"
            }
          },
          {
            "name": "User-Contact-Information",
            "description": "Please provide your e-mail information. You will be notified when there is major or minor version changes.",
            "in": "header",
            "schema": {
              "description": "Please provide your e-mail information. You will be notified when there is major or minor version changes.",
              "type": "string",
              "pattern": "^[a-zA-Z0-9.*%±]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A trip search result object containing the suggestion of trips",
            "headers": {
              "cache-control": {
                "description": "This response header will contain a max-age that hint the max time, in seconds, the data is cached for this resource. In case of no cache policy apply then it will also contain the 'no-cache' directive.",
                "required": true,
                "schema": {
                  "description": "This response header will contain a max-age that hint the max time, in seconds, the data is cached for this resource. In case of no cache policy apply then it will also contain the 'no-cache' directive.",
                  "type": "string"
                }
              },
              "age": {
                "description": "This response header contains the time in seconds the response has been in the cache when a cache policy applied. When response is not cached this header is omitted.",
                "schema": {
                  "description": "This response header contains the time in seconds the response has been in the cache when a cache policy applied. When response is not cached this header is omitted.",
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApistopFinderType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiBadRequestType"
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiResourceNotFoundType"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiInternalServerErrorType"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiBadGatewayType"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiGatewayTimeoutType"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://journeyplanner.integration.sl.se/v2/"
          }
        ]
      }
    },
    "/trips": {
      "get": {
        "summary": "Retrieve information for trips, addresses and POI:s",
        "parameters": [
          {
            "name": "language",
            "description": "Sets the language of the session.\nPossible values \"en\" (English) or \"sv\" (Swedish)\n\n*Note: Text notes and disruption information is only available in Swedish. Even if \"en\" is selected this information will be presented in Swedish.",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Sets the language of the session.\nPossible values \"en\" (English) or \"sv\" (Swedish)\n\n*Note: Text notes and disruption information is only available in Swedish. Even if \"en\" is selected this information will be presented in Swedish.",
              "enum": [
                "sv",
                "en"
              ],
              "example": "sv",
              "type": "string"
            }
          },
          {
            "name": "type_origin",
            "description": "The type of the origin:\n\nIf coordinate: \"coord\", otherwise \"any\".",
            "required": true,
            "in": "query",
            "schema": {
              "description": "The type of the origin:\n\nIf coordinate: \"coord\", otherwise \"any\".",
              "enum": [
                "coord",
                "any"
              ],
              "type": "string"
            }
          },
          {
            "name": "name_origin",
            "description": "The origin of the trip:\n\n* locations.id from stop-finder request OR\n* coordinate: \\<x>:\\<y>:WGS84[dd.ddddd],\n\n*Note: type must be stated in parameter \"type_origin\".*",
            "required": true,
            "in": "query",
            "schema": {
              "description": "The origin of the trip:\n\n* locations.id from stop-finder request OR\n* coordinate: \\<x>:\\<y>:WGS84[dd.ddddd],\n\n*Note: type must be stated in parameter \"type_origin\".*",
              "example": "9091001000009208",
              "type": "string"
            }
          },
          {
            "name": "type_destination",
            "description": "The type of the destination:\nIf coordinate: \"coord\", otherwise \"any\".",
            "required": true,
            "in": "query",
            "schema": {
              "description": "The type of the destination:\nIf coordinate: \"coord\", otherwise \"any\".",
              "enum": [
                "coord",
                "any"
              ],
              "example": "any",
              "type": "string"
            }
          },
          {
            "name": "name_destination",
            "description": "The destination of the trip:\n* locations.id from stop-finder request OR\n* coordinate: \\<x>:\\<y>:WGS84[dd.ddddd]\n\n*note: type must be stated in parameter \"type_destination\"*",
            "required": true,
            "in": "query",
            "schema": {
              "description": "The destination of the trip:\n* locations.id from stop-finder request OR\n* coordinate: \\<x>:\\<y>:WGS84[dd.ddddd]\n\n*note: type must be stated in parameter \"type_destination\"*",
              "example": "9091001000009208",
              "type": "string"
            }
          },
          {
            "name": "calc_number_of_trips",
            "description": "The number of calculated trips in the result.\n\n*Note: Does only affect the number of public transport trips. Walk only/bike only trips or alternative trips are not affected.*",
            "required": true,
            "in": "query",
            "schema": {
              "description": "The number of calculated trips in the result.\n\n*Note: Does only affect the number of public transport trips. Walk only/bike only trips or alternative trips are not affected.*",
              "example": 1,
              "type": "integer",
              "minimum": 0,
              "maximum": 3
            }
          },
          {
            "name": "type_via",
            "description": "The type of \"name_via\":\n* always \"any\".\n\n*Note: required if using \"name_via\"*",
            "required": false,
            "in": "query",
            "schema": {
              "description": "The type of \"name_via\":\n* always \"any\".\n\n*Note: required if using \"name_via\"*",
              "enum": [
                "any"
              ],
              "type": "string"
            }
          },
          {
            "name": "name_via",
            "description": "Id of a stop that the trip should go via:\n\n* The locations.id from StopFinderRequest.\n\n*Note: only stops  can be set as via.*\n\n*Note: type must be stated in parameter \"type_via\"*",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Id of a stop that the trip should go via:\n\n* The locations.id from StopFinderRequest.\n\n*Note: only stops  can be set as via.*\n\n*Note: type must be stated in parameter \"type_via\"*",
              "example": "9091001000009208",
              "type": "string"
            }
          },
          {
            "name": "prefer_excl_line",
            "description": "Specifies a line that should be avoided as far as possible.\n* The parameter can be specified multiple times.\n\n* See must_exclLine for value definition\n* Requires parameters sel_line and prefer_excl",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Specifies a line that should be avoided as far as possible.\n* The parameter can be specified multiple times.\n\n* See must_exclLine for value definition\n* Requires parameters sel_line and prefer_excl",
              "type": "array",
              "items": {
                "example": "tfs:06083:A::y01",
                "type": "string"
              }
            }
          },
          {
            "name": "max_time_pedestrian",
            "description": "Max time in minutes for walk only trip\n\n*This parameter overwrites the default value*\n\nDefault: 60",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Max time in minutes for walk only trip\n\n*This parameter overwrites the default value*\n\nDefault: 60",
              "example": 10,
              "type": "integer",
              "minimum": 0,
              "maximum": 120
            }
          },
          {
            "name": "max_changes",
            "description": "Maximum number of interchanges in one trip. Valid values are 0-9. Default: 9.",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Maximum number of interchanges in one trip. Valid values are 0-9. Default: 9.",
              "example": 4,
              "type": "integer",
              "minimum": 0,
              "maximum": 9
            }
          },
          {
            "name": "compute_monomodal_trip_pedestrian",
            "description": "Enables the calculation of an additional walk only trip.",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Enables the calculation of an additional walk only trip.",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "must_excl_line",
            "description": "Specifies a line that is to be excluded.\n\n* The parameter can be used multiple times to exclude several lines \n\n* The value of the parameter is made up of the network \\<network>, the DIVA line \\<line>, the line supplement \\<line supplement>, the direction of travel \\<direction> and the timetable project <timetable project>, each separated by a colon. E g: tfs:01050: :H:y01\n\n\n* The parameter can be used multiple times to prioritise the routes of different operators\n* Requires parameters sel_line and must_excl\n\nAvailable values\n* the values in this parameter could be retrieved from the upcoming request line-List (property \"id\")\n* the value includes direction, which means that every included or excluded line must be defined by two parameters (two directions) or by a value where the direction is removed.\n\nExample:\nTo exclude the line 83x, the parameter must_exclLine must be stated two times, one for each direction:\n\n* &must_exclLine=tfs:06083:A:H:y01\n* &must_exclLine=tfs:06083:A:R:y01\n\nor by using a value where the direction information is removed\n\n* &must_exclLine=tfs:06083:A::y01",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Specifies a line that is to be excluded.\n\n* The parameter can be used multiple times to exclude several lines \n\n* The value of the parameter is made up of the network \\<network>, the DIVA line \\<line>, the line supplement \\<line supplement>, the direction of travel \\<direction> and the timetable project <timetable project>, each separated by a colon. E g: tfs:01050: :H:y01\n\n\n* The parameter can be used multiple times to prioritise the routes of different operators\n* Requires parameters sel_line and must_excl\n\nAvailable values\n* the values in this parameter could be retrieved from the upcoming request line-List (property \"id\")\n* the value includes direction, which means that every included or excluded line must be defined by two parameters (two directions) or by a value where the direction is removed.\n\nExample:\nTo exclude the line 83x, the parameter must_exclLine must be stated two times, one for each direction:\n\n* &must_exclLine=tfs:06083:A:H:y01\n* &must_exclLine=tfs:06083:A:R:y01\n\nor by using a value where the direction information is removed\n\n* &must_exclLine=tfs:06083:A::y01",
              "type": "array",
              "items": {
                "example": "tfs:06083:A::y01",
                "type": "string"
              }
            }
          },
          {
            "name": "use_only_op",
            "description": "Specifies an operator to be used exclusively\n* The parameter can be used multiple times to specify more than one operator\n\n* The value of the parameter is made up of the network \\<network>, the name of the operator \\<name> and the operator code \\<code>, each separated by a colon.\n* It is possible to leave the \\<name> blank\n* Requires parameters sel_op and use_only\n\n Available values from SL datasource (Pubtrans)\n * \"tfs::1\" - SL\n * \"tfs::2\" - Uppsala Lokaltrafik\n * \"tfs::5\" - Färdtjänsten närtrafik\n * \"tfs::6\" - Trafikverket road ferries\n * \"tfs::8\" - Waxholmsbolaget\n\nOperators in Samtrafiken data\n* The operators in Samtrafiken data may vary, and because of this they are not specified in this document. The data can be found by using the line-List request if needed.\n* Network for Samtrafiken data is always “sam”.\n\nDen främsta användningen av denna funktion att exkludera data från Samtrafiken, och det lättaste sättet att göra detta är troligen att ange alla operatörer från listan ovan som use_only_op:\n\n* &sel_op=1&use_only=1&use_only_op=tfs::1&use_only_op=tfs::2&use_only_op=tfs::5&use_only_op=tfs::6&use_only_op=tfs::8",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Specifies an operator to be used exclusively\n* The parameter can be used multiple times to specify more than one operator\n\n* The value of the parameter is made up of the network \\<network>, the name of the operator \\<name> and the operator code \\<code>, each separated by a colon.\n* It is possible to leave the \\<name> blank\n* Requires parameters sel_op and use_only\n\n Available values from SL datasource (Pubtrans)\n * \"tfs::1\" - SL\n * \"tfs::2\" - Uppsala Lokaltrafik\n * \"tfs::5\" - Färdtjänsten närtrafik\n * \"tfs::6\" - Trafikverket road ferries\n * \"tfs::8\" - Waxholmsbolaget\n\nOperators in Samtrafiken data\n* The operators in Samtrafiken data may vary, and because of this they are not specified in this document. The data can be found by using the line-List request if needed.\n* Network for Samtrafiken data is always “sam”.\n\nDen främsta användningen av denna funktion att exkludera data från Samtrafiken, och det lättaste sättet att göra detta är troligen att ange alla operatörer från listan ovan som use_only_op:\n\n* &sel_op=1&use_only=1&use_only_op=tfs::1&use_only_op=tfs::2&use_only_op=tfs::5&use_only_op=tfs::6&use_only_op=tfs::8",
              "type": "array",
              "items": {
                "example": "tfs::1",
                "type": "string"
              }
            }
          },
          {
            "name": "change_speed",
            "description": "Sets the speed in percentage for interchanges and walk/bike paths.\n\n* Value: 25-400",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Sets the speed in percentage for interchanges and walk/bike paths.\n\n* Value: 25-400",
              "example": 150,
              "type": "integer",
              "minimum": 25,
              "maximum": 400
            }
          },
          {
            "name": "calc_one_direction",
            "description": "If enabled, this parameter prevents the journey planner from calculating one trip before the requested departure time, which is the default functionality.\n\nE.g. when asking for a departure at 12:00, the journey planner by default atomatically presents also the departure closest before 12:00.",
            "required": false,
            "in": "query",
            "schema": {
              "description": "If enabled, this parameter prevents the journey planner from calculating one trip before the requested departure time, which is the default functionality.\n\nE.g. when asking for a departure at 12:00, the journey planner by default atomatically presents also the departure closest before 12:00.",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "tr_it_mot_value100",
            "description": "* Max time in minutes for foot paths in the beginning or end of a trip\n* The parameter overwrites the value defined in the configuration*\n* Min and max *distance* can be set using parameters min_length_pedestrian and max_length_pedestrian\n\nDefault: 10",
            "required": false,
            "in": "query",
            "schema": {
              "description": "* Max time in minutes for foot paths in the beginning or end of a trip\n* The parameter overwrites the value defined in the configuration*\n* Min and max *distance* can be set using parameters min_length_pedestrian and max_length_pedestrian\n\nDefault: 10",
              "example": 10,
              "type": "integer",
              "minimum": 0,
              "maximum": 120
            }
          },
          {
            "name": "sel_line",
            "description": "Enables line filter\n* The parameter can be specified multiple times.\n\nNote: requires one of the parameter combination\n* must_excl + must_excl_line\n* prefer_excl + prefer_excl_line\n* prefer_incl + prefer_incl_line",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Enables line filter\n* The parameter can be specified multiple times.\n\nNote: requires one of the parameter combination\n* must_excl + must_excl_line\n* prefer_excl + prefer_excl_line\n* prefer_incl + prefer_incl_line",
              "type": "array",
              "items": {
                "example": "tfs:01050: :H:y01",
                "type": "string"
              }
            }
          },
          {
            "name": "type_not_via",
            "description": "The type of \"name_not_via\":\n* always \"any\".\n\n*Note: required if using \"name_not_via\"*",
            "required": false,
            "in": "query",
            "schema": {
              "description": "The type of \"name_not_via\":\n* always \"any\".\n\n*Note: required if using \"name_not_via\"*",
              "enum": [
                "any"
              ],
              "example": "any",
              "type": "string"
            }
          },
          {
            "name": "name_not_via",
            "description": "Id of a stop that the trip should not go via:\n* The locations.id from StopFinderRequest.\n\n*Note: only stops can be set as 'not via.*'\n\n*Note: type must be stated in parameter \"type_not_via\"*\n\nValue: 9091001000009192",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Id of a stop that the trip should not go via:\n* The locations.id from StopFinderRequest.\n\n*Note: only stops can be set as 'not via.*'\n\n*Note: type must be stated in parameter \"type_not_via\"*\n\nValue: 9091001000009192",
              "type": "string"
            }
          },
          {
            "name": "max_time_bicycle",
            "description": "Max time (in minutes) for bike only trip (compute_monomodal_trip_bicycle)\n\n*The parameter overwrites the default value.*\n\nDefault: 10",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Max time (in minutes) for bike only trip (compute_monomodal_trip_bicycle)\n\n*The parameter overwrites the default value.*\n\nDefault: 10",
              "example": 10,
              "type": "integer",
              "minimum": 0,
              "maximum": 120
            }
          },
          {
            "name": "must_excl",
            "description": "Enables definitive exclusion of Operators and Lines.\n * See sel_op and sel_line",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Enables definitive exclusion of Operators and Lines.\n * See sel_op and sel_line",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "sel_op",
            "description": "Enables operators filter\n\nNote: requires one of the parameter combination\n* use_only + use_only_op\n* must_excl + must_excl_op\n* prefer_excl + prefer_excl_op\n* prefer_incl + prefer_incl_op",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Enables operators filter\n\nNote: requires one of the parameter combination\n* use_only + use_only_op\n* must_excl + must_excl_op\n* prefer_excl + prefer_excl_op\n* prefer_incl + prefer_incl_op",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "tr_it_dep_mot_value107",
            "description": "* Max time in minutes for bike path in the beginning of a trip\n\n* The parameter overwrites the value defined in the configuration\n* Min and max *distance* can be set using parameters min_length_bicycle and max_length_bicycle\nDefault: 10",
            "required": false,
            "in": "query",
            "schema": {
              "description": "* Max time in minutes for bike path in the beginning of a trip\n\n* The parameter overwrites the value defined in the configuration\n* Min and max *distance* can be set using parameters min_length_bicycle and max_length_bicycle\nDefault: 10",
              "example": 10,
              "type": "integer",
              "minimum": 0,
              "maximum": 120
            }
          },
          {
            "name": "must_excl_op",
            "description": "Specifies an operator to exclude.\n\n* The parameter can be used multiple times.\n* See use_only_op for value definition\n* Requires parameters sel_op and must_excl",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Specifies an operator to exclude.\n\n* The parameter can be used multiple times.\n* See use_only_op for value definition\n* Requires parameters sel_op and must_excl",
              "type": "array",
              "items": {
                "example": "tfs::1",
                "type": "string"
              }
            }
          },
          {
            "name": "no_alt",
            "description": "Supress alternative/ additional trips\n\n* Alternative trips are additionaly presented trips which do not match the preferred search criteria, e.g. a fast trip with a couple of interchanges when user has set few interchanges.\n* Alternative trips are identified by \"isAdditional=true\" in result.",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Supress alternative/ additional trips\n\n* Alternative trips are additionaly presented trips which do not match the preferred search criteria, e.g. a fast trip with a couple of interchanges when user has set few interchanges.\n* Alternative trips are identified by \"isAdditional=true\" in result.",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "itd_time",
            "description": "The time of the trip. Shall be in format HHMM.",
            "required": false,
            "in": "query",
            "schema": {
              "description": "The time of the trip. Shall be in format HHMM.",
              "example": "1200",
              "type": "string",
              "pattern": "^[0-2][0-9][0-6][0-9]$"
            }
          },
          {
            "name": "itd_date",
            "description": "The date of the trip in format YYYYMMDD.",
            "required": false,
            "in": "query",
            "schema": {
              "description": "The date of the trip in format YYYYMMDD.",
              "example": "20250224",
              "type": "string",
              "pattern": "^[2][0][2-3][0-9][0-1][0-9][0-3][0-9]$"
            }
          },
          {
            "name": "prefer_incl",
            "description": "Enables preferred inclusion of Operators and Lines (include if possible).\n * See sel_op and sel_line",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Enables preferred inclusion of Operators and Lines (include if possible).\n * See sel_op and sel_line",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "prefer_excl_op",
            "description": "Specifies an operator that should be avoided as far as possible.\n\n* The parameter can be specified multiple times in order to penalise the routes of different operators\n* See use_only_op for value definition\n* Requires parameters sel_op and prefer_excl",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Specifies an operator that should be avoided as far as possible.\n\n* The parameter can be specified multiple times in order to penalise the routes of different operators\n* See use_only_op for value definition\n* Requires parameters sel_op and prefer_excl",
              "type": "array",
              "items": {
                "example": "tfs::1",
                "type": "string"
              }
            }
          },
          {
            "name": "use_prox_foot_search",
            "description": "Enables walk to alternative stops, nearby the selected stop.",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Enables walk to alternative stops, nearby the selected stop.",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "incl_mot_0",
            "description": "Include commuter train (pendeltåg) in trip calculation.\n\nValue: true",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Include commuter train (pendeltåg) in trip calculation.\n\nValue: true",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "incl_mot_2",
            "description": "Include metro (tunnelbana) in trip calculation.\n\nValue: true",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Include metro (tunnelbana) in trip calculation.\n\nValue: true",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "incl_mot_4",
            "description": "Include local train/tram (lokaltåg/spårväg) in trip calculation.\n\nValue: true",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Include local train/tram (lokaltåg/spårväg) in trip calculation.\n\nValue: true",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "incl_mot_5",
            "description": "Include bus (buss) in trip calculation.\n\nValue: true",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Include bus (buss) in trip calculation.\n\nValue: true",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "incl_mot_9",
            "description": "Include ship and ferry (båttrafik) in trip calculation.\n\nValue: true",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Include ship and ferry (båttrafik) in trip calculation.\n\nValue: true",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "incl_mot_10",
            "description": "Include transit on demand area service (anropsstyrd områdestrafik) in trip calculation.\n\nNote: incl_mot_5 and incl_mot_10 should be enabled.\n\nValue: true",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Include transit on demand area service (anropsstyrd områdestrafik) in trip calculation.\n\nNote: incl_mot_5 and incl_mot_10 should be enabled.\n\nValue: true",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "incl_mot_14",
            "description": "Include national train (fjärrtåg) in trip calculation.\n\nValue: true",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Include national train (fjärrtåg) in trip calculation.\n\nValue: true",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "incl_mot_19",
            "description": "Include accessible bus (närtrafik) in trip calculation.\n\nValue: true",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Include accessible bus (närtrafik) in trip calculation.\n\nValue: true",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "use_prox_foot_search_dest",
            "description": "Enables walk to alternative stops, nearby the selected stop. For destination only.\ntrue for enable or false for disable. Default: false",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Enables walk to alternative stops, nearby the selected stop. For destination only.\ntrue for enable or false for disable. Default: false",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "route_type",
            "description": "Calculate trips with least interchanges, fastest connections (leasttime ) or shortest footpaths (leastwalking).\n\nPossible values:\n* leastinterchange\n* leasttime\n* leastwalking\n\nDefault: leasttime",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Calculate trips with least interchanges, fastest connections (leasttime ) or shortest footpaths (leastwalking).\n\nPossible values:\n* leastinterchange\n* leasttime\n* leastwalking\n\nDefault: leasttime",
              "enum": [
                "leastinterchange",
                "leasttime",
                "leastwalking"
              ],
              "example": "leasttime",
              "type": "string"
            }
          },
          {
            "name": "max_length_pedestrian",
            "description": "Maximum distance in meters for footpath sections.",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Maximum distance in meters for footpath sections.",
              "example": 1000,
              "type": "integer",
              "minimum": 0,
              "maximum": 1000
            }
          },
          {
            "name": "use_only",
            "description": "Enables definitive inclusion of Operators.\n\n* See sel_op",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Enables definitive inclusion of Operators.\n\n* See sel_op",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "prefer_excl",
            "description": "Enables preferred exclusion of Operators and Lines (avoid if possible).\n * See sel_op and sel_line",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Enables preferred exclusion of Operators and Lines (avoid if possible).\n * See sel_op and sel_line",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "min_length_pedestrian",
            "description": "Minimum distance in meters for footpath sections.",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Minimum distance in meters for footpath sections.",
              "example": 100,
              "type": "integer",
              "minimum": 0,
              "maximum": 1000
            }
          },
          {
            "name": "compute_monomodal_trip_bicycle",
            "description": "Enables the calculation of an additional bike only trip",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Enables the calculation of an additional bike only trip",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "dwell_time",
            "description": "Adds extra waiting time (in minutes) at a via stop, when using name_via.<br>\n<br>\nAccepted format:<br>\n* **HHMM** - The two-digit hour number is followed by the two-digit minute number separated by a colon.",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Adds extra waiting time (in minutes) at a via stop, when using name_via.<br>\n<br>\nAccepted format:<br>\n* **HHMM** - The two-digit hour number is followed by the two-digit minute number separated by a colon.",
              "example": "0010",
              "type": "string",
              "pattern": "^[0-1][0-2][0-6][0-9]$",
              "maxLength": 5
            }
          },
          {
            "name": "tr_it_dep_mot",
            "description": "Enables mode of transport (mot) in the beginning of a trip.\n\n* 107 = bike\n\nValue: 107",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Enables mode of transport (mot) in the beginning of a trip.\n\n* 107 = bike\n\nValue: 107",
              "enum": [
                107
              ],
              "example": 107,
              "type": "integer"
            }
          },
          {
            "name": "gen_c",
            "description": "Enables output of coordinate sequences for trip legs",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Enables output of coordinate sequences for trip legs",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "prefer_incl_op",
            "description": "Specifies an operator to be prioritised.\n\n* The parameter can be used multiple times to prioritise the routes of different operators\n* See use_only_op for value definition\n* Requires parameters sel_op and preferInc",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Specifies an operator to be prioritised.\n\n* The parameter can be used multiple times to prioritise the routes of different operators\n* See use_only_op for value definition\n* Requires parameters sel_op and preferInc",
              "type": "array",
              "items": {
                "example": "tfs::1",
                "type": "string"
              }
            }
          },
          {
            "name": "use_prox_foot_search_orig",
            "description": "Enables walk to alternative stops, nearby the selected stop. For origin only.",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Enables walk to alternative stops, nearby the selected stop. For origin only.",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "prefer_incl_line",
            "description": "Specifies a line that is to be prioritised.\n* The parameter can be specified multiple times in order to prioritise several lines.\n* See must_exclLine for value definition\n* Requires parameters sel_line and prefer_Incl",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Specifies a line that is to be prioritised.\n* The parameter can be specified multiple times in order to prioritise several lines.\n* See must_exclLine for value definition\n* Requires parameters sel_line and prefer_Incl",
              "type": "array",
              "items": {
                "example": "tfs:01050: :H:y01",
                "type": "string"
              }
            }
          },
          {
            "name": "max_length_bicycle",
            "description": "Maximum distance in meters for bike sections",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Maximum distance in meters for bike sections",
              "type": "integer",
              "minimum": 0,
              "maximum": 1000
            }
          },
          {
            "name": "min_length_bicycle",
            "description": "Minimum distance in meters for bike sections.",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Minimum distance in meters for bike sections.",
              "example": 1000,
              "type": "integer",
              "minimum": 0,
              "maximum": 1000
            }
          },
          {
            "name": "itd_trip_date_time_dep_arr",
            "description": "Search for departure time or arrival time, used in conjunction with itd_date and itd_time.\n\n* Shall be either \"dep\" or \"arr\".\n* If not set, \"dep\" is used by default.",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Search for departure time or arrival time, used in conjunction with itd_date and itd_time.\n\n* Shall be either \"dep\" or \"arr\".\n* If not set, \"dep\" is used by default.",
              "enum": [
                "dep",
                "arr"
              ],
              "example": "dep",
              "type": "string"
            }
          },
          {
            "name": "X-Correlation-Id",
            "description": "For your own traceability. This is to be generated by the user and is used for correspondence with SL.",
            "in": "header",
            "schema": {
              "description": "For your own traceability. This is to be generated by the user and is used for correspondence with SL.",
              "type": "string"
            }
          },
          {
            "name": "User-Contact-Information",
            "description": "Please provide your e-mail information. You will be notified when there is major or minor version changes.",
            "in": "header",
            "schema": {
              "description": "Please provide your e-mail information. You will be notified when there is major or minor version changes.",
              "type": "string",
              "pattern": "^[a-zA-Z0-9.*%±]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A line list search result object containing a filtered list of lines",
            "headers": {
              "cache-control": {
                "description": "This response header will contain a max-age that hint the max time, in seconds, the data is cached for this resource. In case of no cache policy apply then it will also contain the 'no-cache' directive.",
                "required": true,
                "schema": {
                  "description": "This response header will contain a max-age that hint the max time, in seconds, the data is cached for this resource. In case of no cache policy apply then it will also contain the 'no-cache' directive.",
                  "type": "string"
                }
              },
              "age": {
                "description": "This response header contains the time in seconds the response has been in the cache when a cache policy applied. When response is not cached this header is omitted.",
                "schema": {
                  "description": "This response header contains the time in seconds the response has been in the cache when a cache policy applied. When response is not cached this header is omitted.",
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openapitripsType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiBadRequestType"
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiResourceNotFoundType"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiInternalServerErrorType"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiBadGatewayType"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiGatewayTimeoutType"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://journeyplanner.integration.sl.se/v2/"
          }
        ]
      }
    },
    "/line-list": {
      "get": {
        "summary": "Retrieve information for stops, adresses and POI:s",
        "parameters": [
          {
            "name": "line_list_subnetwork",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/line_list_subnetworkParam"
            }
          },
          {
            "name": "line_list_branch_code",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/line_list_branch_codeParam"
            }
          },
          {
            "name": "merge_dir",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/merge_dirParam"
            }
          },
          {
            "name": "X-Correlation-Id",
            "description": "For your own traceability. This is to be generated by the user and is used for correspondence with SL.",
            "in": "header",
            "schema": {
              "description": "For your own traceability. This is to be generated by the user and is used for correspondence with SL.",
              "type": "string"
            }
          },
          {
            "name": "User-Contact-Information",
            "description": "Please provide your e-mail information. You will be notified when there is major or minor version changes.",
            "in": "header",
            "schema": {
              "description": "Please provide your e-mail information. You will be notified when there is major or minor version changes.",
              "type": "string",
              "pattern": "^[a-zA-Z0-9.*%±]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A line list search result object containing a filtered list of lines",
            "headers": {
              "cache-control": {
                "description": "This response header will contain a max-age that hint the max time, in seconds, the data is cached for this resource. In case of no cache policy apply then it will also contain the 'no-cache' directive.",
                "required": true,
                "schema": {
                  "description": "This response header will contain a max-age that hint the max time, in seconds, the data is cached for this resource. In case of no cache policy apply then it will also contain the 'no-cache' directive.",
                  "type": "string"
                }
              },
              "age": {
                "description": "This response header contains the time in seconds the response has been in the cache when a cache policy applied. When response is not cached this header is omitted.",
                "schema": {
                  "description": "This response header contains the time in seconds the response has been in the cache when a cache policy applied. When response is not cached this header is omitted.",
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApilineListType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiBadRequestType"
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiResourceNotFoundType"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiInternalServerErrorType"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiBadGatewayType"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openApiGatewayTimeoutType"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://journeyplanner.integration.sl.se/v2/"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "openapisystemsInfoType": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "validity": {
            "$ref": "#/components/schemas/validityObject"
          }
        }
      },
      "openApiBadRequestType": {
        "type": "object",
        "properties": {
          "message": {
            "description": "Error message.",
            "example": {
              "strict": false,
              "value": "Bad Request"
            },
            "type": "string"
          },
          "description": {
            "description": "Description of the error.",
            "example": {
              "strict": false,
              "value": "Required query parameter any_obj_filter_sf not specified"
            },
            "type": "string"
          }
        }
      },
      "openApiResourceNotFoundType": {
        "type": "object",
        "properties": {
          "message": {
            "description": "Error message.",
            "example": {
              "strict": false,
              "value": "Resource Not Found"
            },
            "type": "string"
          },
          "description": {
            "description": "Description of the error.",
            "example": {
              "strict": false,
              "value": null
            },
            "type": "string"
          }
        }
      },
      "openApiInternalServerErrorType": {
        "type": "object",
        "properties": {
          "message": {
            "description": "Error message.",
            "example": {
              "strict": false,
              "value": "Internal Server Error"
            },
            "type": "string"
          },
          "description": {
            "description": "Description of the error.",
            "example": {
              "strict": false,
              "value": "Please try again."
            },
            "type": "string"
          }
        }
      },
      "openApiBadGatewayType": {
        "type": "object",
        "properties": {
          "message": {
            "description": "Error message.",
            "example": {
              "strict": false,
              "value": "Bad Gateway"
            },
            "type": "string"
          },
          "description": {
            "description": "Description of the error.",
            "example": {
              "strict": false,
              "value": null
            },
            "type": "string"
          }
        }
      },
      "openApiGatewayTimeoutType": {
        "type": "object",
        "properties": {
          "message": {
            "description": "Error message.",
            "example": {
              "strict": false,
              "value": "Gateway Timeout"
            },
            "type": "string"
          },
          "description": {
            "description": "Description of the error.",
            "example": {
              "strict": false,
              "value": null
            },
            "type": "string"
          }
        }
      },
      "name_sfParam": {
        "description": "Name of the locality (e.g. stop name, POI, address) or coordinate.\n\nSyntax for coordinates: \"<x>:<y>:WGS84[dd.ddddd]\" E.g. \"18.013809:59.335104:WGS84[dd.ddddd]\"\nNote: Type must be stated in parameter \"type_sf\".\nexample: Lindhagensgatan 100",
        "example": "Lindhagensgatan 100",
        "type": "string"
      },
      "type_sfParam": {
        "description": "Search using coordinates or anything else. For searching using:\n\n* Coordinates: \"coord\", \n\n* Anything: \"any\".\n\nValue: any",
        "enum": [
          "coord",
          "any"
        ],
        "example": "coord",
        "type": "string"
      },
      "any_obj_filter_sfParam": {
        "description": "Bitmask defines *any* in parameter *type_sf*:\n* 2 = stops\n* 12 = streets and addresses\n* 32 = POI\n* 46 = all above\n\nValue: 46",
        "example": 46,
        "type": "integer"
      },
      "openApistopFinderType": {
        "type": "object",
        "properties": {
          "systemMessages": {
            "$ref": "#/components/schemas/systemmessagesObject"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/locationsObject"
            }
          }
        }
      },
      "openapitripsType": {
        "type": "object",
        "properties": {
          "systemMessages": {
            "$ref": "#/components/schemas/systemmessagesObject"
          },
          "journeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/openapijourneyObject"
            }
          }
        }
      },
      "line_list_subnetworkParam": {
        "description": "Network corresponds to our data sources:\nStorstockholms Lokaltrafik = tfs",
        "enum": [
          "tfs"
        ],
        "example": "tfs",
        "type": "string"
      },
      "line_list_branch_codeParam": {
        "description": "tfs:<br>\n  Branch code - Description<br>\n    1 - Bus (buss)<br>\n    2 - Metro (tunnelbana)<br>\n    3 - Tram/local train (spårväg/lokalbana)<br>\n    4 - Commuter train (pendeltåg) <br>\n    5 - Road ferry (vägfärja)<br>\n    6 - Vessel service (färja)<br>\n    7 - Taxi<br>\n    8 - Accessible bus (närtrafik)<br>\n<br>",
        "example": 1,
        "type": "integer"
      },
      "merge_dirParam": {
        "description": "Merges the inbound and outbound service. Thus only inbound services are listed. By default both are listed",
        "example": true,
        "type": "boolean"
      },
      "openApilineListType": {
        "type": "object",
        "properties": {
          "transportation": {
            "$ref": "#/components/schemas/transportationObject"
          }
        }
      },
      "validityObject": {
        "type": "object",
        "properties": {
          "from": {
            "description": "Validity.from and validity.to reflects the start and end dates of the the availabe timetable, when invoking trip requests",
            "example": {
              "strict": false,
              "value": "2021-08-01"
            },
            "type": "string"
          },
          "to": {
            "description": "Validity.from and validity.to reflects the start and end dates of the the availabe timetable, when invoking trip requests",
            "example": {
              "strict": false,
              "value": "2022-02-28"
            },
            "type": "string"
          }
        }
      },
      "systemmessagesObject": {
        "description": "System messages from backend.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "description": "Type of message, e.g. “error”.",
              "example": {
                "strict": false,
                "value": "error"
              },
              "type": "string"
            },
            "module": {
              "description": "Back-end module reporting the message",
              "example": {
                "strict": false,
                "value": "BROKER"
              },
              "type": "string"
            },
            "code": {
              "description": "Internal error code, please see internal error codes: \n   module: broker\n  * -8010 Any-input uniquely verified\n  * -8011 Any-list verified\n  * -8012 Any-input invalid\n  * -8013 Any-location found, but cannot be verified\n  * -8014 Any-input has too many matches\n  * -8020 No matches\n  * -8031 Matches (e.g. buildings) found for a street\n  * -8032 No matches found (e.g. buildings) for a street\n\n  * -4000 No journey found for the time entered\n  * -4001 Date not possible in the current timetable period\n  * -4002 No origin verified\n  * -4003 No destination verified\n  * -4004 Origin exists, but cannot be identified\n  * -4005 Destination exists, but cannot be identified\n  * -4006 Only a walk has been found\n  * -4007 Origin and destination are identical\n  * -4008 Unknown Via-point\n  * -4009 Time interval is invalid\n  * -4010 Via stop point is not an interchange stop\n  * -4011 Invalid Via-input\n  * +4011 Moved journey already exists\n  * -4012 Origin outside the valid zone (e.g. fare zone)\n  * -4013 Destination outside the valid zone (e.g. fare zone)\n  * -4014 Via outside the valid zone (e.g. fare zone)\n  * -4020 No transition point found\n  * -4030 No departures found\n  * -4040 No arrivals found\n  * -4050 No services found at this stop\n  * -4060 No matching operators\n  * -4100 No journey because of a rule\n  * -4101 Rule changed the options\n  * -4102 Rule changed the permitted vehicles\n  * -4103 Journey has been recalculated due to a rule with different parameters\n  * -4104 Rule removed the via point\n  * -4300 Invalid prefer-to-exclude parameter\n  * -4301 Invalid prefer-to-include parameter\n  * -4302 Invalid mixing of prefer-toexclude/include parameters\n  * -4303 Invalid footpath parameter\n  * -9999 Trip has been cancelled\n  * -10015 No journey found",
              "example": {
                "strict": false,
                "value": -8011
              },
              "type": "integer"
            },
            "text": {
              "description": "Description of error, if available",
              "example": {
                "strict": false,
                "value": "itp"
              },
              "type": "string"
            },
            "subType": {
              "description": "subType of error, if available",
              "example": {
                "strict": false,
                "value": "itp-monomodal"
              },
              "type": "string"
            }
          }
        }
      },
      "locationsObject": {
        "type": "object",
        "required": [
          "coord"
        ],
        "properties": {
          "id": {
            "description": "The id of the search result. Use this parameter when invoking trip requests.\n\nNote: When searching for addresses, the complete address+house number result is type \"singlehouse\". If omitting house number in the search, the result is type \"street\". The \"street\" result is an average coordinate value for the addresses in this street. \"Street\" may be used when invoking trip requests, but might be less accurate for the user, compared to using \"singlehouse\".",
            "example": {
              "strict": false,
              "value": "9091001000009192"
            },
            "type": "string"
          },
          "isGlobalId": {
            "description": "Value is true if location is a stop.",
            "example": {
              "strict": false,
              "value": true
            },
            "type": "boolean"
          },
          "name": {
            "description": "The name of the search result, including municipality name",
            "example": {
              "strict": false,
              "value": "Stockholm, Slussen"
            },
            "type": "string"
          },
          "disassembledName": {
            "description": "The name of the search result, without municipality name",
            "example": {
              "strict": false,
              "value": "Slussen"
            },
            "type": "string"
          },
          "coord": {
            "$ref": "#/components/schemas/coordPosition"
          },
          "streetName": {
            "description": "The street name, if search result is type \"street or singlehouse\".",
            "example": {
              "strict": false,
              "value": "Tomtebogatan"
            },
            "type": "string"
          },
          "buildingNumber": {
            "description": "The house number, if search result is \"singlehouse\".",
            "example": {
              "strict": false,
              "value": "31"
            },
            "type": "string"
          },
          "type": {
            "description": "The type of the result. Example values = address, stop, singlehouse, poi, street.\n\nNote: \"address\" is the result from coordinate search. \"Street\" and \"singlehouse\" is the result from address text search.",
            "example": {
              "strict": false,
              "value": "stop"
            },
            "type": "string"
          },
          "matchQuality": {
            "description": "Quality of the query matching.",
            "example": {
              "strict": false,
              "value": 1000
            },
            "type": "integer"
          },
          "isBest": {
            "description": "value is true if the best search match is found.",
            "example": {
              "strict": false,
              "value": true
            },
            "type": "boolean"
          },
          "productClasses": {
            "description": "Products at this stop. 0 = train (pendeltåg) 2 = metro (tunnelbana) 4 = train/tram (lokaltåg/spårväg) 5 = bus (buss) 9 = ship and ferry (båttrafik) 10 = transit on demand area service (anropsstyrd områdestrafik), 14 = long distance/express train\n\n\n Note: If a stop is missing product classes completely, the stop is not serviced in the available timetable, This also applies if product number is 14.",
            "type": "array",
            "items": {
              "example": {
                "strict": false,
                "value": [
                  2,
                  5,
                  9
                ]
              },
              "type": "integer"
            }
          },
          "parent": {
            "description": "Principality of the stop or stop area.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Id of the principality.",
                "example": {
                  "strict": false,
                  "value": "placeID:33001080:1"
                },
                "type": "string"
              },
              "name": {
                "description": "The name of the municipality where the search result is found",
                "example": {
                  "strict": false,
                  "value": "Stockholm"
                },
                "type": "string"
              },
              "type": {
                "description": "Type of the principality.",
                "example": {
                  "strict": false,
                  "value": "locality"
                },
                "type": "string"
              }
            }
          }
        }
      },
      "openapijourneyObject": {
        "type": "object",
        "properties": {
          "tripId": {
            "$ref": "#/components/schemas/tripId"
          },
          "tripDuration": {
            "$ref": "#/components/schemas/tripDuration"
          },
          "tripRtDuration": {
            "$ref": "#/components/schemas/tripRtDuration"
          },
          "rating": {
            "$ref": "#/components/schemas/rating"
          },
          "isAdditional": {
            "$ref": "#/components/schemas/isAdditional"
          },
          "interchanges": {
            "$ref": "#/components/schemas/interchanges"
          },
          "isRealtimeOnlyInformative": {
            "$ref": "#/components/schemas/isRealtimeOnlyInformative"
          },
          "realtimeExplanationIdx": {
            "$ref": "#/components/schemas/realtimeExplanationIdx"
          },
          "legs": {
            "description": "Each leg of the trip result",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/openapilegobject"
            }
          },
          "hints": {
            "description": "Text messages in Swedish from planned timetable regarding the trip",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "providerCode": {
                  "description": "",
                  "example": {
                    "strict": false,
                    "value": 100
                  },
                  "type": "string"
                },
                "content": {
                  "description": "Information",
                  "example": {
                    "strict": false,
                    "value": "Resan måste beställas på sl.se"
                  },
                  "type": "string"
                }
              }
            }
          },
          "daysOfService": {
            "description": "Not used",
            "type": "object",
            "properties": {
              "rvb": {
                "description": "Not used",
                "example": {
                  "strict": false,
                  "value": "1F000000000F9F3E7CF9F3C00F9F3E7C4F9F3E7C39E1E7CF2E7CF9F200079F1E"
                },
                "type": "string"
              }
            }
          }
        }
      },
      "transportationObject": {
        "type": "object",
        "required": [
          "type",
          "items"
        ],
        "properties": {
          "type": {
            "type": "array",
            "items": {}
          },
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "description": "Id of the line",
                "example": {
                  "strict": false,
                  "value": "tfs:01050: :H:y01"
                },
                "type": "string"
              },
              "name": {
                "description": "Name of the line",
                "example": {
                  "strict": false,
                  "value": "Buss 50"
                },
                "type": "string"
              },
              "disassembled_name": {
                "description": "Short name of the line",
                "example": {
                  "strict": false,
                  "value": "50"
                },
                "type": "string"
              },
              "number": {
                "description": "Line number",
                "example": {
                  "strict": false,
                  "value": "50"
                },
                "type": "string"
              },
              "product": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Id to be used as input in trip search to exclude or include one a specific line. Please see “must_excl_line” in trip search.",
                    "example": {
                      "strict": false,
                      "value": 3
                    },
                    "type": "integer"
                  },
                  "class": {
                    "description": "Mode of transport code (mot). Please see “incl_mot_[number]” in trip search",
                    "example": {
                      "strict": false,
                      "value": 5
                    },
                    "type": "integer"
                  },
                  "name": {
                    "description": "Mode of transport name, in Swedish",
                    "example": {
                      "strict": false,
                      "value": "Buss"
                    },
                    "type": "string"
                  },
                  "icon_id": {
                    "description": "Not to be used",
                    "example": {
                      "strict": false,
                      "value": 3
                    },
                    "type": "integer"
                  }
                }
              },
              "operator": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Id of operator",
                    "example": {
                      "strict": false,
                      "value": "1"
                    },
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of operator",
                    "example": {
                      "strict": false,
                      "value": "Storstockholms Lokaltrafik"
                    },
                    "type": "string"
                  }
                }
              },
              "destination": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of destination",
                    "example": {
                      "strict": false,
                      "value": "Lektorsstigen, Stockholm"
                    },
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of destination",
                    "example": {
                      "strict": false,
                      "value": "stop"
                    },
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "coordPosition": {
        "x-amf-examples": {
          "example_0": {
            "strict": false,
            "value": [
              59.34151,
              18.03002
            ]
          },
          "example_1": [
            59.34151,
            18.03002
          ]
        },
        "type": "array",
        "maxItems": 2,
        "minItems": 2,
        "items": {
          "type": "number"
        }
      },
      "tripId": {
        "description": "Id of the trip",
        "example": "NULL|9021001010248000|2025-02-10T12:36:00Z|9025001000001011|2025-02-10T12:46:00Z|9015001001711026|9025001000001011|2025-02-10T12:46:00Z|9025001000002051|2025-02-10T12:50:00Z|9015001001030363|9025001000003051|2025-02-10T12:55:30Z|9025001000003161|2025-02-10T13:00:00Z",
        "type": "string"
      },
      "tripDuration": {
        "description": "Duration of the trip (in seconds), according to planned timetable",
        "example": 1440,
        "type": "integer"
      },
      "tripRtDuration": {
        "description": "Duration of the trip (in seconds), according to realtime updates",
        "example": 1440,
        "type": "integer"
      },
      "rating": {
        "description": "Not used.",
        "example": 0,
        "type": "integer"
      },
      "isAdditional": {
        "description": "If value is “true” this is a recommended trip which do not match all of the the preferred search criteria, e.g. a fast journey with a couple of interchanges if you prefer fewer interchanges.",
        "example": true,
        "type": "boolean"
      },
      "interchanges": {
        "description": "The number of interchanges in the trip",
        "example": 1,
        "type": "integer"
      },
      "isRealtimeOnlyInformative": {
        "description": "The result is a schedule based search result, where the real-time is only added as information.  The real-time information did not result in a new connection.",
        "example": true,
        "type": "boolean"
      },
      "realtimeExplanationIdx": {
        "description": "if this value is 0 or higher, this result is possible according to the realtime situation  (the value which is returned does not have a meaning for the end user)",
        "example": "714211515",
        "type": "string"
      },
      "openapilegobject": {
        "type": "object",
        "properties": {
          "infos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/openapiinfosObject"
            }
          },
          "distance": {
            "description": "Distance of the leg",
            "example": {
              "strict": false,
              "value": 1
            },
            "type": "integer"
          },
          "duration": {
            "description": "Duration of the leg",
            "type": "integer"
          },
          "footPathInfo": {
            "$ref": "#/components/schemas/footPathInfoObject"
          },
          "origin": {
            "$ref": "#/components/schemas/legsorigindestinationObject"
          },
          "destination": {
            "$ref": "#/components/schemas/legsorigindestinationObject"
          },
          "transportation": {
            "$ref": "#/components/schemas/legstransportationObject"
          },
          "stopSequence": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/legsorigindestinationObject"
            }
          },
          "coords": {
            "$ref": "#/components/schemas/coordpositionsObject"
          },
          "properties": {
            "type": "object",
            "properties": {
              "ON_DEMAND_LEG": {
                "description": "not used",
                "example": {
                  "strict": false,
                  "value": 0
                },
                "type": "integer"
              },
              "tripId": {
                "description": "See RealtimeTripId",
                "example": {
                  "strict": false,
                  "value": 0
                },
                "type": "integer"
              }
            }
          }
        }
      },
      "footPathInfoObject": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "duration": {
              "description": "Duration of the footpath",
              "type": "integer"
            },
            "footPathElem": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "attributes": {
                    "description": "VAD ÄR DETTA?",
                    "type": "object",
                    "properties": {
                      "distance": {
                        "description": "VAD ÄR DETTA?",
                        "example": {
                          "strict": false,
                          "value": 0
                        },
                        "type": "integer"
                      },
                      "duration": {
                        "description": "VAD ÄR DETTA?",
                        "example": {
                          "strict": false,
                          "value": 20
                        },
                        "type": "integer"
                      },
                      "elevDoorWidth": {
                        "description": "VAD ÄR DETTA?",
                        "example": {
                          "strict": false,
                          "value": 20
                        },
                        "type": "integer"
                      },
                      "elevLength": {
                        "description": "VAD ÄR DETTA?",
                        "example": {
                          "strict": false,
                          "value": 0
                        },
                        "type": "integer"
                      },
                      "elevWidth": {
                        "description": "VAD ÄR DETTA?",
                        "example": {
                          "strict": false,
                          "value": 20
                        },
                        "type": "integer"
                      },
                      "maxStepHeight": {
                        "description": "VAD ÄR DETTA?",
                        "example": {
                          "strict": false,
                          "value": 20
                        },
                        "type": "integer"
                      },
                      "narrowestWidth": {
                        "description": "VAD ÄR DETTA?",
                        "example": {
                          "strict": false,
                          "value": 20
                        },
                        "type": "integer"
                      },
                      "numberSteps": {
                        "description": "VAD ÄR DETTA?",
                        "example": {
                          "strict": false,
                          "value": 0
                        },
                        "type": "integer"
                      },
                      "rampInclination": {
                        "description": "VAD ÄR DETTA?",
                        "example": {
                          "strict": false,
                          "value": 20
                        },
                        "type": "integer"
                      },
                      "rampLength": {
                        "description": "VAD ÄR DETTA?",
                        "example": {
                          "strict": false,
                          "value": 20
                        },
                        "type": "integer"
                      },
                      "rampWidth": {
                        "description": "VAD ÄR DETTA?",
                        "example": {
                          "strict": false,
                          "value": 20
                        },
                        "type": "integer"
                      }
                    }
                  },
                  "description": {
                    "description": "VAD ÄR DETTA?",
                    "example": {
                      "strict": false,
                      "value": null
                    },
                    "type": "string"
                  },
                  "origin": {
                    "$ref": "#/components/schemas/legsfootpathinfofootpathelemorigindestinationObject"
                  },
                  "destination": {
                    "$ref": "#/components/schemas/legsfootpathinfofootpathelemorigindestinationObject"
                  },
                  "level": {
                    "description": "VAD ÄR DETTA?",
                    "example": {
                      "strict": false,
                      "value": "LEVEL"
                    },
                    "type": "string"
                  },
                  "levelFrom": {
                    "description": "VAD ÄR DETTA?",
                    "example": {
                      "strict": false,
                      "value": 0
                    },
                    "type": "integer"
                  },
                  "levelTo": {
                    "description": "VAD ÄR DETTA?",
                    "example": {
                      "strict": false,
                      "value": 0
                    },
                    "type": "integer"
                  },
                  "openingHours": {
                    "description": "VAD ÄR DETTA?",
                    "example": {
                      "strict": false,
                      "value": []
                    },
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "position": {
              "description": "VAD ÄR DETTA?",
              "example": {
                "strict": false,
                "value": "IDEST"
              },
              "type": "string"
            }
          }
        }
      },
      "legsorigindestinationObject": {
        "description": "Origin or destination object",
        "type": "object",
        "properties": {
          "isGlobalId": {
            "description": "True if global id",
            "type": "boolean"
          },
          "id": {
            "description": "Id",
            "example": {
              "strict": false,
              "value": "9025001000060000"
            },
            "type": "string"
          },
          "name": {
            "description": "Name with locality",
            "example": {
              "strict": false,
              "value": "Danderyds sjukhus, Danderyd"
            },
            "type": "string"
          },
          "disassembledName": {
            "description": "Name only",
            "example": {
              "strict": false,
              "value": "D"
            },
            "type": "string"
          },
          "type": {
            "description": "The type of the leg origin, e.g stop, platform, street, address, poi.",
            "example": {
              "strict": false,
              "value": "platform"
            },
            "type": "string"
          },
          "coord": {
            "$ref": "#/components/schemas/coordPosition"
          },
          "niveau": {
            "description": "not used",
            "example": {
              "strict": false,
              "value": 0
            },
            "type": "integer"
          },
          "parent": {
            "$ref": "#/components/schemas/legsorigindestinationObject"
          },
          "productClasses": {
            "description": "Products at this stop or stop area.\n0 = train (pendeltåg)\n2 = metro (tunnelbana)\n4 = train/tram (lokaltåg/spårväg)\n5 = bus (buss)\n9 = ship and ferry (båttrafik)\n10 = transit on demand area service (anropsstyrd områdestrafik)",
            "type": "array",
            "items": {
              "example": {
                "strict": false,
                "value": [
                  2,
                  5,
                  9
                ]
              },
              "type": "integer"
            }
          },
          "departureTimeBaseTimetable": {
            "description": "Departure according to timetable",
            "example": {
              "strict": false,
              "value": "2025-02-10T09:45:42Z"
            },
            "type": "string"
          },
          "departureTimePlanned": {
            "description": "Planned departure time",
            "example": {
              "strict": false,
              "value": "2025-02-10T09:45:42Z"
            },
            "type": "string"
          },
          "departureTimeEstimated": {
            "description": "Estimated departure time",
            "example": {
              "strict": false,
              "value": "2025-02-10T09:45:42Z"
            },
            "type": "string"
          },
          "arrivalTimeBaseTimetable": {
            "description": "Arrival according to timetable",
            "example": {
              "strict": false,
              "value": "2025-02-10T09:45:42Z"
            },
            "type": "string"
          },
          "arrivalTimePlanned": {
            "description": "Planned arrival time",
            "example": {
              "strict": false,
              "value": "2025-02-10T09:45:42Z"
            },
            "type": "string"
          },
          "arrivalTimeEstimated": {
            "description": "Estimated arrival time",
            "example": {
              "strict": false,
              "value": "2025-02-10T09:45:42Z"
            },
            "type": "string"
          },
          "properties": {
            "type": "object",
            "properties": {
              "AREA_NIVEAU_DIVA": {
                "description": "not used",
                "example": {
                  "strict": false,
                  "value": "??"
                },
                "type": "string"
              },
              "area": {
                "description": "not used",
                "example": {
                  "strict": false,
                  "value": 3
                },
                "type": "string"
              },
              "occupancy": {
                "description": "not used",
                "example": {
                  "strict": false,
                  "value": "MANY_SEATS"
                },
                "type": "string"
              },
              "platform": {
                "description": "not used",
                "example": {
                  "strict": false,
                  "value": 1
                },
                "type": "string"
              },
              "stoppingPointPlanned": {
                "description": "not used",
                "example": {
                  "strict": false,
                  "value": "1"
                },
                "type": "string"
              },
              "platformName": {
                "description": "not used",
                "example": {
                  "strict": false,
                  "value": 1
                },
                "type": "string"
              },
              "callType": {
                "description": "not used",
                "type": "array",
                "items": {
                  "example": {
                    "strict": false,
                    "value": "ONDEMAND"
                  },
                  "type": "string"
                }
              },
              "stopId": {
                "description": "not used",
                "example": {
                  "strict": false,
                  "value": 18064146
                },
                "type": "string"
              },
              "zone": {
                "description": "not used",
                "example": {
                  "strict": false,
                  "value": "tfs:674"
                },
                "type": "string"
              }
            }
          }
        }
      },
      "legstransportationObject": {
        "description": "Transportation object",
        "type": "object",
        "properties": {
          "id": {
            "description": "id of line",
            "example": {
              "strict": false,
              "value": "tfs:99994:_:H:j25"
            },
            "type": "string"
          },
          "name": {
            "description": "name of line",
            "example": {
              "strict": false,
              "value": "Buss Buss 640Z"
            },
            "type": "string"
          },
          "number": {
            "description": "name and line",
            "example": {
              "strict": false,
              "value": "Buss 640Z"
            },
            "type": "string"
          },
          "product": {
            "description": "Line product",
            "type": "object",
            "properties": {
              "id": {
                "description": "Product id",
                "example": {
                  "strict": false,
                  "value": 4
                },
                "type": "integer"
              },
              "class": {
                "description": "VAD ÄR DETTA?",
                "example": {
                  "strict": false,
                  "value": 10
                },
                "type": "integer"
              },
              "name": {
                "description": "name of product",
                "example": {
                  "strict": false,
                  "value": "Buss"
                },
                "type": "string"
              },
              "iconId": {
                "description": "VAD ÄR DETTA?",
                "example": {
                  "strict": false,
                  "value": 3
                },
                "type": "integer"
              }
            }
          },
          "operator": {
            "description": "operator of line",
            "type": "object",
            "properties": {
              "id": {
                "description": "Id of operator",
                "example": {
                  "strict": false,
                  "value": "??"
                },
                "type": "string"
              },
              "name": {
                "description": "Name of operator",
                "example": {
                  "strict": false,
                  "value": "Storstockholms Lokaltrafik"
                },
                "type": "string"
              }
            }
          },
          "destination": {
            "description": "VAD ÄR DETTA?",
            "type": "object",
            "properties": {
              "id": {
                "description": "VAD ÄR DETTA?",
                "example": {
                  "strict": false,
                  "value": 6
                },
                "type": "string"
              },
              "name": {
                "description": "Name of destination",
                "example": {
                  "strict": false,
                  "value": "Norrtälje"
                },
                "type": "string"
              },
              "type": {
                "description": "Type of destination",
                "example": {
                  "strict": false,
                  "value": "stop"
                },
                "type": "string"
              }
            }
          },
          "properties": {
            "description": "Tranportation properties",
            "type": "object",
            "properties": {
              "trainNumber": {
                "description": "not used",
                "example": {
                  "strict": false,
                  "value": "528"
                },
                "type": "string"
              },
              "tripCode": {
                "description": "not used",
                "example": {
                  "strict": false,
                  "value": 0
                },
                "type": "integer"
              },
              "timetablePeriod": {
                "description": "not used",
                "example": {
                  "strict": false,
                  "value": "??"
                },
                "type": "string"
              },
              "lineDisplay": {
                "description": "Display of line",
                "example": {
                  "strict": false,
                  "value": "LINE"
                },
                "type": "string"
              },
              "OperatorURL": {
                "description": "Url of operator",
                "example": {
                  "strict": false,
                  "value": "www.sl.se"
                },
                "type": "string"
              },
              "globalId": {
                "description": "Global id",
                "example": {
                  "strict": false,
                  "value": 9011001064000000
                },
                "type": "string"
              },
              "RealtimeTripId": {
                "description": "Presented if the trip is included in planned timetable. Gid including Transport authority/       Trafikhuvudman  (pos 5-7) and Trip number /Turnummer (pos 12-16). Transport authorities: 001 = Storstockholms Lokaltrafik, 002 = Uppsala länstrafik (in SL data), 005 = Färdtjänstnämnden, 006 = Trafikverket, 008 = Waxholmsbolaget\n\nAVMSTripID Presented if the trip is included in realtime data. If only AVMSTripID is presented, this trip is an extra trip added in realtime data. See RealtimeTripId for description of the information",
                "example": {
                  "strict": false,
                  "value": "??"
                },
                "type": "string"
              }
            }
          },
          "isSamtrafik": {
            "description": "not used",
            "example": {
              "strict": false,
              "value": false
            },
            "type": "boolean"
          },
          "disassembledName": {
            "description": "Name of the line only",
            "example": {
              "strict": false,
              "value": "640Z"
            },
            "type": "string"
          }
        }
      },
      "coordpositionsObject": {
        "description": "Coordinates for plotting on map.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/coordPosition"
        }
      },
      "openapiinfosObject": {
        "description": "Text messages in Swedish from real time flow regarding the trip",
        "type": "object",
        "properties": {
          "id": {
            "description": "VAD ÄR DETTA?",
            "example": {
              "strict": false,
              "value": "NOPTIS-5984416"
            },
            "type": "string"
          },
          "infoLinks": {
            "description": "Deviation message",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "properties": {
                  "type": "object",
                  "properties": {
                    "infoType": {
                      "description": "not used",
                      "example": {
                        "strict": false,
                        "value": "stopInfo"
                      },
                      "type": "string"
                    },
                    "publisher": {
                      "description": "not used",
                      "example": {
                        "strict": false,
                        "value": "ems.comm.addinfo"
                      },
                      "type": "string"
                    }
                  }
                },
                "title": {
                  "description": "Message to publish in journey results. Only available in Swedish.",
                  "example": {
                    "strict": false,
                    "value": "T-Centralen: Hissen mellan biljetthallen mot Vasagatan/Centralstationen och plattformarna för röda och gröna linjen är avstängd pga tekniskt fel. Resenärer i behov av hiss hänvisas till den andra entrén mot Vasagatan/Centralstationen, via plattformen för den Blå linjen, eller till entrén mot Sergels torg. \n\nVi saknar prognos för när hissen åter kan tas i bruk."
                  },
                  "type": "string"
                },
                "url": {
                  "description": "not used",
                  "example": {
                    "strict": false,
                    "value": "T-Centralen: Hissen mellan biljetthallen mot Centralstationen och plattformarna för röda och gröna linjen är avstängd pga tekniskt fel. Hänvisning till de andra entréerna."
                  },
                  "type": "string"
                }
              }
            }
          },
          "priority": {
            "description": "Message priority",
            "example": {
              "strict": false,
              "value": "veryLow"
            },
            "type": "string"
          },
          "type": {
            "description": "not used",
            "example": {
              "strict": false,
              "value": "stopInfo"
            },
            "type": "string"
          },
          "version": {
            "description": "Message version",
            "example": {
              "strict": false,
              "value": 1
            },
            "type": "integer"
          }
        }
      },
      "legsfootpathinfofootpathelemorigindestinationObject": {
        "description": "Origin or destination of a footpath.",
        "type": "object",
        "properties": {
          "coord": {
            "$ref": "#/components/schemas/coordPosition"
          },
          "id": {
            "example": {
              "strict": false,
              "value": "9025001000000830"
            },
            "type": "string"
          },
          "isGlobalId": {
            "type": "boolean"
          },
          "name": {
            "example": {
              "strict": false,
              "value": "Äpplarö, Österåker"
            },
            "type": "string"
          },
          "properties": {
            "type": "object",
            "properties": {
              "area": {
                "example": {
                  "strict": false,
                  "value": 4
                },
                "type": "integer"
              },
              "areaGid": {
                "example": {
                  "strict": false,
                  "value": 9023001002251002
                },
                "type": "string"
              },
              "areaName": {
                "example": {
                  "strict": false,
                  "value": "??"
                },
                "type": "string"
              },
              "areaType": {
                "example": {
                  "strict": false,
                  "value": 32
                },
                "type": "integer"
              },
              "georef": {
                "example": {
                  "strict": false,
                  "value": "0:0::100"
                },
                "type": "string"
              },
              "platform": {
                "example": {
                  "strict": false,
                  "value": 0
                },
                "type": "integer"
              }
            }
          },
          "type": {
            "example": {
              "strict": false,
              "value": "stop"
            },
            "type": "string"
          }
        }
      }
    }
  }
}
